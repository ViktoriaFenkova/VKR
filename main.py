from click import password_option
from streamlit import button

from Functions import –≤—ã–±–æ—Ä_—à–∞–±–ª–æ–Ω–∞_streamlit, –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ_—à–∞–±–ª–æ–Ω–∞_streamlit
import json
import streamlit as st
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ü–í–ö",
    page_icon="üíª",
    layout="wide",
    initial_sidebar_state="expanded"
)

a = '''

# –õ–æ–≥–æ—Ç–∏–ø –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
logo_url = "https://cdn-icons-png.flaticon.com/512/3243/3243363.png"#–∫–∞–∫ –∑–∞–º–µ–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
st.image(logo_url, width=100)
st.title("üìÉ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü–í–ö")

# –†–æ–ª—å
with st.sidebar:
    selected_section = st.radio("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ —Ä–æ–ª—è–º–∏:", ["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (User)", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (Admin)"], index=0)

# –ù–∞–≤–∏–≥–∞—Ü–∏–∏ —Å–ª–µ–≤–∞
menu = ["üìé –ì–ª–∞–≤–Ω–∞—è", "üìù –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü–í–ö", "üåê –ù–æ–≤–æ—Å—Ç–∏ –ü–û–î/–§–¢", "üìö –û–±—É—á–µ–Ω–∏–µ –ø–æ –ü–û–î/–§–¢"]
choice = st.sidebar.selectbox("–ù–∞–≤–∏–≥–∞—Ü–∏—è", menu)

# –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if choice == "üìé –ì–ª–∞–≤–Ω–∞—è":
    st.subheader("–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ")
    st.info("–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.")

# –ù–æ–≤–æ—Å—Ç–∏ –ü–û–î/–§–¢
elif choice == "üåê –ù–æ–≤–æ—Å—Ç–∏ –ü–û–î/–§–¢":
    st.subheader("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ")
    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    DATA_DIR = "./data/"
    DEFAULT_DOC_NAME = "README.md"

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
    @st.cache_resource(ttl=60 * 60)  # –ö—ç—à–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ —á–∞—Å
    def load_document(filename):
        """–ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞."""
        filepath = DATA_DIR + filename
        ext = os.path.splitext(filepath)[1].lower()
        if ext == ".md":
            with open(filepath, encoding="utf-8") as f:
                return f.read(), "Markdown"
        elif ext == ".pdf":
            return filepath, "PDF"
        else:
            raise ValueError(f"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞ {ext}.")


    # –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è st.set_page_config(page_title="–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ –ü–û–î/–§–¢", layout="wide")

    # –ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    files = sorted(os.listdir(DATA_DIR))  # —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ
    doc_names = files or [DEFAULT_DOC_NAME]

    # –í—ã–±–æ—Ä —Ç–µ–º—ã
    selected_doc = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:", doc_names)
    content, format_type = load_document(selected_doc)

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
    if format_type == "Markdown":
        st.markdown(content)
    elif format_type == "PDF":
        st.write(f"[–û—Ç–∫—Ä—ã—Ç—å PDF —Ñ–∞–π–ª]({content})")
    else:
        st.warning("–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    st.divider()
    st.write("## –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")




# –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü–í–ö
elif choice == "üìù –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü–í–ö":
    st.subheader("_")
    st.write("""
    –ü—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Streamlit.\n
    –ê–≤—Ç–æ—Ä: –í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è\n
    –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å""")

# –ü—Ä–∏–º–µ—á–∞–Ω–∏—è –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é
    st.markdown("<br><center>Copyright ¬© 2023 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</center>", unsafe_allow_html=True)



# –û–±—É—á–µ–Ω–∏–µ –ø–æ –ü–û–î/–§–¢
elif choice == "üìö –û–±—É—á–µ–Ω–∏–µ –ø–æ –ü–û–î/–§–¢":
    st.subheader("–û–±—É—á–µ–Ω–∏–µ –ø–æ –ü–û–î/–§–¢")
    st.write("–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —É—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏—è –ª–µ–≥–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ—Ö–æ–¥–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø—Ä–µ—Å—Ç—É–ø–Ω—ã–º –ø—É—Ç–µ–º, –∏ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Ä—Ä–æ—Ä–∏–∑–º–∞.")
    
# –§—É–Ω–∫—Ü–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∏–∑ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞

    def create_presentation(text):
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
    prs = Presentation()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω —Å–ª–∞–π–¥–∞ (–∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–π —Å–ª–∞–π–¥)
    title_slide_layout = prs.slide_layouts[0]
    first_slide = prs.slides.add_slide(title_slide_layout)
    title = first_slide.shapes.title
    title.text = "–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –æ—Ç Streamlit"

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª–∞–π–¥—ã –±—É–¥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∞–º –≤–≤–æ–¥–∏–º—ã–π —Ç–µ–∫—Å—Ç
    lines = text.split("\n")  # —Ä–∞–∑–±–∏–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–∏
    content_slide_layout = prs.slide_layouts[1]

    for line in lines:
        if len(line.strip()) > 0:
            new_slide = prs.slides.add_slide(content_slide_layout)
            left = top = width = height = Inches(1.0)
            txBox = new_slide.shapes.add_textbox(left, top, width, height)
            tf = txBox.text_frame
            tf.text = line

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
    return prs


# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è")
input_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç:")
generate_button = st.button("–°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é")

if generate_button:
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
        presentation = create_presentation(input_text)

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –≤ –±–∞–π—Ç–æ–≤—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        output_buffer = BytesIO()
        presentation.save(output_buffer)
        output_buffer.seek(0)

        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–∫–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        st.success("–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!")
        st.download_button(label="–°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é",
                           data=output_buffer.getvalue(),
                           file_name="mypresentation.pptx",
                           mime="application/vnd.openxmlformats-officedocument.presentationml.presentation")
    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")'''







user_regime = st.sidebar.button("–†–µ–∂–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞")
print(user_regime)
if user_regime == True: # –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ if e (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏):
    st.session_state.regime = "user_regime" # –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è
if "regime" not in st.session_state: #st.session_state - —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ç—É–¥–∞ –ø–æ–ª–æ–∂–∏–ª–∏ –∏ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π (–ø—Ä–∏–º–µ—Ä - st.session_state.regime)
    st.session_state.regime = "user_regime" # —ç—Ç–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∂–∞–ª –≤–æ–æ–±—â–µ –Ω–∏–∫–∞–∫—É—é –∫–Ω–æ–ø–∫—É
print(st.session_state.regime)

admin_regime = st.sidebar.button("–†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞")
print(admin_regime)
if admin_regime == True: # –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ if e (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏):
    st.session_state.regime = "admin_regime" # –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è



–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è = """
templates = { 
    '–ü–í–ö': { - —Å–ª–æ–≤–∞—Ä—å (—Å 10 –ø–æ 13 —Å—Ç—Ä) –∫–ª—é—á - –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
        'template': "./Data/Templates/PVK Template.docx", -  - –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–ª–æ–≤–∞—Ä—è "–ü–í–ö" , –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —à–∞–±–ª–æ–Ω–∞
        'parameters': {
            'client': '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏'
            },
        'description': '–û–ø–∏—Å–∞–Ω–∏–µ –ü–í–ö –¥–ª—è –î–µ–ø–æ–∑–∏—Ç–∞—Ä–∏—è'
    },
    '–ü–í–ö –¥–ª—è –ò–ü': {
        'template': './Data/Templates/–ü–í–ö –¥–ª—è –ò–ü.docx',
        'parameters': {
            'client': '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ò–ü'
            },
        'description': '–û–ø–∏—Å–∞–Ω–∏–µ –ü–í–ö –¥–ª—è –ò–ü'
    }}
"""

#with open("./Data/—Ñ–æ—Ä–º—ã_—à–∞–±–ª–æ–Ω–æ–≤.json", "w") as templates_file:
    #json.dump(templates, templates_file)

with open("./Data/—Ñ–æ—Ä–º—ã_—à–∞–±–ª–æ–Ω–æ–≤.json", "r") as templates_file: #with –∏—Å–ø–æ–∑—É–µ—Ç—Å—è —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞—Ç—å –µ–≥–æ –∏ –∑–∞–∫—Ä—ã—Ç—å
    templates = json.load(templates_file)

if "users_db" not in st.session_state:
    st.session_state.users_db = {} # –ü—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    st.session_state.username = None
    st.session_state.password = None
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def register_user(username, password):
    if username in st.session_state.users_db:
        st.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    else:
        st.session_state.users_db[username] = {"admin" : True, # –ª—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
                                               "password": password}
        st.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def login_user(username, password):
    if username in st.session_state.users_db and st.session_state.users_db[username]["password"] == password:
        st.success("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        st.error("–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å.")

if not (st.session_state.username in st.session_state.users_db and st.session_state.users_db[st.session_state.username] ["password"] == st.session_state.password):
    st.title("–§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—Ö–æ–¥–∞") # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—Ö–æ–¥–∞

    option = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", ["–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–í—Ö–æ–¥"])

    if option == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è":
        st.header("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        st.session_state.username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        st.session_state.password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")

        if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
            register_user( st.session_state.username, st.session_state.password)

    elif option == "–í—Ö–æ–¥":
        st.header("–í—Ö–æ–¥")
        st.session_state.username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        st.session_state.password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")

        if st.button("–í–æ–π—Ç–∏"):
            login_user( st.session_state.username, st.session_state.password)

print(st.session_state.username)
print(st.session_state.users_db)
#st.session_state - —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏
if st.session_state.username in st.session_state.users_db and st.session_state.users_db[st.session_state.username]["password"] == st.session_state.password:
    if st.session_state.regime == "user_regime":
        template_name = –≤—ã–±–æ—Ä_—à–∞–±–ª–æ–Ω–∞_streamlit(templates) #–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ tempiates  –∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –æ–Ω –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–º–µ–Ω–Ω—É—é template_name

        template_dict = templates[template_name] # template -—ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, –∫–ª—é—á–∏ –≤ —ç—Ç–æ–º —Å–ª–æ–≤–∞—Ä–µ - –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤, template_name-–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞, –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        template_path = template_dict['template'] # –≤ template_path –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è 'template': './Data/Templates/–ü–í–ö –¥–ª—è –ò–ü.docx',
    # with open(template_path, 'r', encoding='utf-8') as template_file:
    # template = template_file.read()

        –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π_—à–∞–±–ª–æ–Ω = –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ_—à–∞–±–ª–æ–Ω–∞_streamlit(template_dict, template_path)
        print(–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π_—à–∞–±–ª–æ–Ω) #—Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ (–Ω–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ —á–µ–∫–ø–æ–∏–Ω—Ç - —á–µ—Ä–∑ –¥–µ–±–∞–∫ —Ä–µ–∂–∏–º)
        with open("—à–∞–±–ª–æ–Ω_–∫–ª–∏–µ–Ω—Ç–∞.docx", "w") as —à–∞–±–ª–æ–Ω_—Ñ–∞–π–ª:
            —à–∞–±–ª–æ–Ω_—Ñ–∞–π–ª.write(–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π_—à–∞–±–ª–æ–Ω)# retern - —Ç–æ–ª—å–∫–æ —Å –Ω–µ –≥–æ—Ç–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
        with open("—à–∞–±–ª–æ–Ω_–∫–ª–∏–µ–Ω—Ç–∞.docx", "r") as —à–∞–±–ª–æ–Ω_—Ñ–∞–π–ª:
            st.download_button("–°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç", —à–∞–±–ª–æ–Ω_—Ñ–∞–π–ª, file_name= template_name +".docx")


d = '''import streamlit as st
from pptx import Presentation
from pptx.util import Inches
from io import BytesIO


# –§—É–Ω–∫—Ü–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∏–∑ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
def create_presentation(text):
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
    prs = Presentation()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω —Å–ª–∞–π–¥–∞ (–∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–π —Å–ª–∞–π–¥)
    title_slide_layout = prs.slide_layouts[0]
    first_slide = prs.slides.add_slide(title_slide_layout)
    title = first_slide.shapes.title
    title.text = "–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –æ—Ç Streamlit"

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª–∞–π–¥—ã –±—É–¥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∞–º –≤–≤–æ–¥–∏–º—ã–π —Ç–µ–∫—Å—Ç
    lines = text.split("\n")  # —Ä–∞–∑–±–∏–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–∏
    content_slide_layout = prs.slide_layouts[1]

    for line in lines:
        if len(line.strip()) > 0:
            new_slide = prs.slides.add_slide(content_slide_layout)
            left = top = width = height = Inches(1.0)
            txBox = new_slide.shapes.add_textbox(left, top, width, height)
            tf = txBox.text_frame
            tf.text = line

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
    return prs


# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è")
input_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç:")
generate_button = st.button("–°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é")

if generate_button:
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
        presentation = create_presentation(input_text)

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –≤ –±–∞–π—Ç–æ–≤—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        output_buffer = BytesIO()
        presentation.save(output_buffer)
        output_buffer.seek(0)

        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–∫–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        st.success("–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!")
        st.download_button(label="–°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é",
                           data=output_buffer.getvalue(),
                           file_name="mypresentation.pptx",
                           mime="application/vnd.openxmlformats-officedocument.presentationml.presentation")
    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")'''






