from click import password_option
from streamlit import button

from Functions import –≤—ã–±–æ—Ä_—à–∞–±–ª–æ–Ω–∞_streamlit, –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ_—à–∞–±–ª–æ–Ω–∞_streamlit
import json
import streamlit as st


import re
from docx import Document


from pptx import Presentation
from pptx.util import Inches, Pt
from io import BytesIO

from PIL import Image


# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ü–í–ö-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä",
    layout="wide",
    initial_sidebar_state="expanded",
    page_icon=Image.open("logo.png")
)

logo = Image.open("logo.png")# –¥–æ–±–∞–≤–ª—è—é —Ñ–∞–π–ª —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º

st.sidebar.image(logo, width=120)# –¥–æ–±–∞–≤–ª—è—é –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–Ω–∏–∑—É
st.sidebar.markdown("### –ü–í–ö-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä")

# –î–æ–±–∞–≤–ª—è—é –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–≤–µ—Ä—Ö—É, –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞—é –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
col1, col2 = st.columns([1, 3])  # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ, —Ç–µ–∫—Å—Ç ‚Äî –≤–æ –≤—Ç–æ—Ä–æ–π
with col1:
    st.image(logo, width=400)
with col2:
    st.markdown("## –ü–í–ö-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä")
    st.markdown(
        '<p style="color: gray;">—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏ –≤ –ü–û–î/–§–¢ –≤ –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</p>',
        unsafe_allow_html=True
    )

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
if "page" not in st.session_state: #st.session_state - —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ç—É–¥–∞ –ø–æ–ª–æ–∂–∏–ª–∏ –∏ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
    st.session_state.page = "page_main" # –Ω–∞–∑–Ω–∞—á–∞—é –ì–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É

# –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
page_main = st.sidebar.button("üìé –ì–ª–∞–≤–Ω–∞—è")
if page_main == True:
    st.session_state.page = "page_main"

# –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–∞–∑–¥–µ–ª–æ–º –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü–í–ö
user_regime = st.sidebar.button("üîß –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü–í–ö")
print(user_regime)
if user_regime == True:
    st.session_state.page = "page_PVK" # –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è
    st.title("–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü–í–ö")
print(st.session_state.page)

# –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–∞–∑–¥–µ–ª–æ–º –†–µ–¥–∞–∫—Ç–æ—Ä –®–∞–±–ª–æ–Ω–æ–≤
if "users_db" not in st.session_state:
    # –î–≤–∞ —Ä–µ–∂–∏–º–∞: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (admin) –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (user)
    st.session_state.users_db = {
        "admin": {"admin": True, "password": "admin"},
        "user": {"admin": False, "password": "user"}
    }

    st.session_state.username = None
    st.session_state.password = None

if st.session_state.username in st.session_state.users_db and (st.session_state.users_db) [st.session_state.username] ["admin"]: # == True
    admin_page = st.sidebar.button("üìå –°—Ç—Ä–∞–Ω–∏—á–∫–∞ –∞–¥–º–∏–Ω–∞")
    print(admin_page)
    if admin_page == True:
        st.session_state.page = "admin_page"

# –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–∞–∑–¥–µ–ª–æ–º –û–±—É—á–µ–Ω–∏–µ –ø–æ –ü–û–î/–§–¢
presentation_page = st.sidebar.button("üìö –û–±—É—á–µ–Ω–∏–µ –ø–æ –ü–û–î/–§–¢")
if presentation_page == True:
    st.session_state.page = "presentation_page"

# –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–∞–∑–¥–µ–ª–æ–º –ù–æ–≤–æ—Å—Ç–∏ –ü–û–î/–§–¢
news_page = st.sidebar.button("üì¢ –ù–æ–≤–æ—Å—Ç–∏ –ü–û–î/–§–¢")
print(news_page)
if news_page == True:
    st.session_state.page = "news_page"

—à–∞–±–ª–æ–Ω_–ü–í–ö = """
templates = { 
    '–ü–í–ö': { - —Å–ª–æ–≤–∞—Ä—å (—Å 10 –ø–æ 13 —Å—Ç—Ä) –∫–ª—é—á - –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
        'template': "./Data/Templates/PVK Template.docx", -  - –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–ª–æ–≤–∞—Ä—è "–ü–í–ö" , –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —à–∞–±–ª–æ–Ω–∞
        'parameters': {
            'client': '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏'
            },
        'description': '–û–ø–∏—Å–∞–Ω–∏–µ –ü–í–ö –¥–ª—è –î–µ–ø–æ–∑–∏—Ç–∞—Ä–∏—è'
    },
    '–ü–í–ö –¥–ª—è –ò–ü': {
        'template': './Data/Templates/–ü–í–ö –¥–ª—è –ò–ü.docx',
        'parameters': {
            'client': '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ò–ü'
            },
        'description': '–û–ø–∏—Å–∞–Ω–∏–µ –ü–í–ö –¥–ª—è –ò–ü'
    }}
"""


with open("./Data/—Ñ–æ—Ä–º—ã_—à–∞–±–ª–æ–Ω–æ–≤.json", "r") as templates_file: #with –∏—Å–ø–æ–ª—å–∑—É—é, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª, –ø—Ä–æ—á–∏—Ç–∞—Ç—å –µ–≥–æ –∏ –∑–∞–∫—Ä—ã—Ç—å
    templates = json.load(templates_file)

# –†–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def register_user(username, password):
    if username in st.session_state.users_db:
        st.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    else:
        st.session_state.users_db[username] = {"admin" : False, # –ª—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
                                               "password": password}
        st.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def login_user(username, password):
    if username in st.session_state.users_db and st.session_state.users_db[username]["password"] == password:
        st.success("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        st.error("–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å.")

if (not (st.session_state.username in st.session_state.users_db and st.session_state.users_db[st.session_state.username] ["password"] == st.session_state.password) and
    st.session_state.page != "page_main" and st.session_state.page != "news_page"):
    st.title("–§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—Ö–æ–¥–∞") # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—Ö–æ–¥–∞

    option = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", ["–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–í—Ö–æ–¥"])

    if option == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è":
        st.header("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        st.session_state.username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        st.session_state.password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")

        if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
            register_user( st.session_state.username, st.session_state.password)

    elif option == "–í—Ö–æ–¥":
        st.header("–í—Ö–æ–¥")
        st.session_state.username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        st.session_state.password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")

        if st.button("–í–æ–π—Ç–∏"):
            login_user( st.session_state.username, st.session_state.password)

print(st.session_state.username)
print(st.session_state.users_db)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —à–∞–±–ª–æ–Ω–∞
def extract_parameters_from_docx(docx_file):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    doc = Document(docx_file)

    # –°–æ–∑–¥–∞—é —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    parameters = set()

    # –ü—Ä–æ—Ö–æ–∂—É –ø–æ –≤—Å–µ–º –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞–º –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ
    for para in doc.paragraphs:
        # –ò—Å–ø–æ–ª—å–∑—É—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö
        matches = re.findall(r'\{(.*?)\}', para.text)
        parameters.update(matches)  # –î–æ–±–∞–≤–ª—è—é –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ

    return list(parameters), doc # –≤–æ–∑–≤—Ä–∞—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

with open("./Data/news.json", "r") as news_file:
    news = json.load(news_file)

#st.session_state - —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏
# –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if st.session_state.page == "page_main":
    st.subheader("–ü–í–ö-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî –≤—Å—ë –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ –ü–û–î/–§–¢ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ")
    st.markdown(
        '<p style="color: gray;">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤ —Å—Ñ–µ—Ä–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è, –∫–æ–º–ø–ª–∞–µ–Ω—Å–∞ –∏ –ü–û–î/–§–¢. –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤ —Å–µ–±–µ –∫–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã</p>',
        unsafe_allow_html=True
    )

    st.markdown("""
    
        ### 
        

        ---

        #### üîß **–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü—Ä–∞–≤–∏–ª –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ö–æ–Ω—Ç—Ä–æ–ª—è**
        –°–æ–∑–¥–∞–≤–∞–π—Ç–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∏ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ **–ü—Ä–∞–≤–∏–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è** –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏.  
        –° –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º –≤—ã –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–¥ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –≤–∞—à–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.

        ---

        #### üìö **–û–±—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –ü–û–î/–§–¢**
        –ì–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ **–æ–±—É—á–∞—é—â–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏** —Å —Ç–µ–∫—Å—Ç–∞–º–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –æ—Å–≤–µ–¥–æ–º–ª—ë–Ω–Ω–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ü–û–î/–§–¢ –∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ –æ–±—É—á–µ–Ω–∏—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.  
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ –∏ –±—ã—Å—Ç—Ä–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–≥–ª—è–¥–Ω—ã–µ –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.

        ---

        #### üì∞ **–ù–æ–≤–æ—Å—Ç–∏ –ü–û–î/–§–¢**
        –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ —Å—Ñ–µ—Ä–µ –ü–û–î/–§–¢ –¥–ª—è —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –æ–±—É—á–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.

        ---
        """)


# –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏
elif st.session_state.page == "news_page":
    st.write("–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ —Å—Ñ–µ—Ä–µ –ü–û–î/–§–¢ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    st.title("–ù–æ–≤–æ—Å—Ç–∏")

    # –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    –Ω–æ–≤–æ—Å—Ç–∏ ="""{
            "title": "–ù–æ–≤–æ—Å—Ç—å 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞",
            "content": "–ú—ã –≤—ã–ø—É—Å—Ç–∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç—ã –≤ –Ω–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.",
            "date": "2025-04-25",
        },
        {
            "title": "–ù–æ–≤–æ—Å—Ç—å 2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫",
            "content": "–í —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º—ã –∏—Å–ø—Ä–∞–≤–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –±–∞–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –º–µ—à–∞—Ç—å —Ä–∞–±–æ—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
            "date": "2025-04-20",
        },
        {
            "title": "–ù–æ–≤–æ—Å—Ç—å 3: –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞",
            "content": "–ú—ã —Ä–∞–¥—ã –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏. –£–∑–Ω–∞–π—Ç–µ –≤—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –Ω–∞—à–µ–º –±–ª–æ–≥–µ.",
            "date": "2025-04-15",
        },
        ]"""

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –¥–∞—Ç–µ
    news_list = []
    for –∑–∞–≥–æ–ª–æ–≤–æ–∫, —Ç–µ–∫—Å—Ç_–Ω–æ–≤–æ—Å—Ç–∏ in news.items():
        news_list.append({
            'title': –∑–∞–≥–æ–ª–æ–≤–æ–∫,
            'content': —Ç–µ–∫—Å—Ç_–Ω–æ–≤–æ—Å—Ç–∏['content'],
            'date': —Ç–µ–∫—Å—Ç_–Ω–æ–≤–æ—Å—Ç–∏['date']
        })
    news_list.sort(key=lambda x: x["date"], reverse=True)

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
    for news_item in news_list:
        st.subheader(news_item["title"])
        st.write(f"**–î–∞—Ç–∞:** {news_item['date']}")
        st.write(news_item["content"])
        st.markdown("---")

# –†–∞–±–æ—Ç–∞ —Å —à–∞–±–ª–æ–Ω–∞–º–∏
if st.session_state.username in st.session_state.users_db and st.session_state.users_db[st.session_state.username]["password"] == st.session_state.password:
    if st.session_state.page== "page_PVK":
        template_name = –≤—ã–±–æ—Ä_—à–∞–±–ª–æ–Ω–∞_streamlit(templates) # –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ tempiates, –∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –æ–Ω –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é template_name

        template_dict = templates[template_name] # template -—ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, –∫–ª—é—á–∏ –≤ —ç—Ç–æ–º —Å–ª–æ–≤–∞—Ä–µ - –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤, template_name-–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞, –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        template_path = template_dict['template'] # –≤ template_path –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è 'template': './Data/Templates/–ü–í–ö –¥–ª—è –ò–ü.docx',
    # with open(template_path, 'r', encoding='utf-8') as template_file:
    # template = template_file.read()

        –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π_—à–∞–±–ª–æ–Ω = –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ_—à–∞–±–ª–æ–Ω–∞_streamlit(template_dict, template_path)
        print(–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π_—à–∞–±–ª–æ–Ω) # —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ (–Ω–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ —á–µ–∫–ø–æ–∏–Ω—Ç - —á–µ—Ä–∑ –¥–µ–±–∞–∫ —Ä–µ–∂–∏–º)
        with open("—à–∞–±–ª–æ–Ω_–∫–ª–∏–µ–Ω—Ç–∞.docx", "w") as —à–∞–±–ª–æ–Ω_—Ñ–∞–π–ª:
            —à–∞–±–ª–æ–Ω_—Ñ–∞–π–ª.write(–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π_—à–∞–±–ª–æ–Ω)# retern - —Ç–æ–ª—å–∫–æ —Å –Ω–µ –≥–æ—Ç–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
        with open("—à–∞–±–ª–æ–Ω_–∫–ª–∏–µ–Ω—Ç–∞.docx", "r") as —à–∞–±–ª–æ–Ω_—Ñ–∞–π–ª:
            st.download_button("–°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç", —à–∞–±–ª–æ–Ω_—Ñ–∞–π–ª, file_name= template_name +".docx")
            # –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    elif st.session_state.page == "admin_page":
        st.title("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∞")
        –¥–µ–π—Å—Ç–≤–∏–µ = st.selectbox("–î–µ–π—Å—Ç–≤–∏—è", ["–î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω", "–£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω—ã", "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å", "–£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"])
        if –¥–µ–π—Å—Ç–≤–∏–µ == "–î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω":
            template_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞")
            template_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞")

            # –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–∞
            uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ .docx —à–∞–±–ª–æ–Ω", type=["docx"])

            # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            parameter_descriptions = {}
            parameters = []

            if uploaded_file:
                # –ò–∑–≤–ª–µ–∫–∞—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
                parameters, doc = extract_parameters_from_docx(uploaded_file)

                if parameters:
                    st.markdown("### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —à–∞–±–ª–æ–Ω–∞")


                    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é –æ–ø–∏—Å–∞–Ω–∏–µ
                    for param in parameters:
                        description = st.text_input(f"–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: {param}", key=f"param_desc_{param}")
                        if description:
                            parameter_descriptions[param] = description
                else:
                    st.warning("–í —à–∞–±–ª–æ–Ω–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.")
            # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
            —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ_—à–∞–±–ª–æ–Ω–∞ = st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω")
            if —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ_—à–∞–±–ª–æ–Ω–∞ == True:
                if not template_name:
                    st.warning("–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ")
                    st.error("–®–∞–±–ª–æ–Ω –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                elif not template_description:
                    st.warning("–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ")
                    st.error("–®–∞–±–ª–æ–Ω –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                elif not uploaded_file:
                    st.warning("–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
                    st.error("–®–∞–±–ª–æ–Ω –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                elif len(parameter_descriptions)!= len(parameters):#–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω–Ω—ã —Å–ø–∏—Å–∫–∞ –∫–ª—é—á–µ–π
                    st.warning("–ù–µ —É–∫–∞–∑–∞–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞")
                    st.error("–®–∞–±–ª–æ–Ω –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                else:
                    template_new_path = f"./Data/Templates/{template_name}.docx"
                    doc.save(template_new_path)#doc - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–º—É —Ñ–∞–π–ª—É, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                    templates[template_name] = {
                        "description": template_description,
                        'template': template_new_path,
                    'parameters': parameter_descriptions
                    }
                    with open("./Data/—Ñ–æ—Ä–º—ã_—à–∞–±–ª–æ–Ω–æ–≤.json", "w") as templates_file:
                        json.dump(templates, templates_file)
                    st.success("–®–∞–±–ª–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

        elif –¥–µ–π—Å—Ç–≤–∏–µ == "–£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω—ã":
            —à–∞–±–ª–æ–Ω—ã_–Ω–∞_—É–¥–∞–ª–µ–Ω–∏–µ = st.selectbox ("–®–∞–±–ª–æ–Ω—ã –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ", [""] + list(templates.keys()))
            if —à–∞–±–ª–æ–Ω—ã_–Ω–∞_—É–¥–∞–ª–µ–Ω–∏–µ !="":
                —É–¥–∞–ª–µ–Ω–∏–µ_—à–∞–±–ª–æ–Ω–∞ = st.button("–£–¥–∞–ª–∏—Ç—å")
                if —É–¥–∞–ª–µ–Ω–∏–µ_—à–∞–±–ª–æ–Ω–∞ == True:
                    del templates[—à–∞–±–ª–æ–Ω—ã_–Ω–∞_—É–¥–∞–ª–µ–Ω–∏–µ]
                    with open("./Data/—Ñ–æ—Ä–º—ã_—à–∞–±–ª–æ–Ω–æ–≤.json", "w") as templates_file:
                        json.dump(templates, templates_file)
                    st.success("–®–∞–±–ª–æ–Ω —É–¥–∞–ª–µ–Ω")

        elif –¥–µ–π—Å—Ç–≤–∏–µ == "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å":
            title = st.text_input(f"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏:")
            content = st.text_input(f"–ù–æ–≤–æ—Å—Ç—å")
            date = st.date_input("–î–∞—Ç–∞ –Ω–æ–≤–æ—Å—Ç–∏")
             # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
            —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ_–Ω–æ–≤–æ—Å—Ç–∏ = st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å")
            if —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ_–Ω–æ–≤–æ—Å—Ç–∏ == True:
                if not title:
                    st.warning("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ")
                    st.error("–ù–æ–≤–æ—Å—Ç—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
                elif not content:
                    st.warning("–ù–æ–≤–æ—Å—Ç—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞")
                    st.error("–ù–æ–≤–æ—Å—Ç—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
                elif not date:
                    st.warning("–î–∞—Ç–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞")
                    st.error("–ù–æ–≤–æ—Å—Ç—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
                else:
                    news[title] = {
                        "content": content,
                        'date': str(date)
                    }
                    with open("./Data/news.json", "w") as news_file:
                        json.dump(news, news_file)
                    st.success("–ù–æ–≤–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")

        elif –¥–µ–π—Å—Ç–≤–∏–µ == "–£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å":
            –Ω–æ–≤–æ—Å—Ç–∏_–Ω–∞_—É–¥–∞–ª–µ–Ω–∏–µ = st.selectbox ("–ù–æ–≤–æ—Å—Ç–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ", [""] + list(news.keys()))
            if –Ω–æ–≤–æ—Å—Ç–∏_–Ω–∞_—É–¥–∞–ª–µ–Ω–∏–µ !="":
                —É–¥–∞–ª–µ–Ω–∏–µ_–Ω–æ–≤–æ—Å—Ç–∏ = st.button("–£–¥–∞–ª–∏—Ç—å")
                if —É–¥–∞–ª–µ–Ω–∏–µ_–Ω–æ–≤–æ—Å—Ç–∏ == True:
                    del news[–Ω–æ–≤–æ—Å—Ç–∏_–Ω–∞_—É–¥–∞–ª–µ–Ω–∏–µ]
                    with open("./Data/news.json", "w") as news_file:
                        json.dump(news, news_file)
                    st.success("–ù–æ–≤–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞")
# –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–∞–∑–¥–µ–ª–æ–º –û–±—É—á–µ–Ω–∏–µ –ø–æ –ü–û–î/–§–¢

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É
    elif presentation_page or st.session_state.get("page") == "presentation_page":
        st.session_state.page = "presentation_page"

        st.title("–û–±—É—á–µ–Ω–∏–µ –ø–æ –ü–û–î/–§–¢")
        st.write("–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")

        # –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
        def create_presentation(slides_data):
            prs = Presentation()
            for slide_data in slides_data:
                slide = prs.slides.add_slide(prs.slide_layouts[1])
                title = slide.shapes.title
                subtitle = slide.placeholders[1]
                title.text = slide_data['title']
                subtitle.text = slide_data['subtitle']

                for i, text in enumerate(slide_data.get('text', [])):
                    left = Inches(1)
                    top = Inches(2 + i)
                    width = Inches(8.5)
                    height = Inches(1)
                    textbox = slide.shapes.add_textbox(left, top, width, height)
                    text_frame = textbox.text_frame
                    p = text_frame.add_paragraph()
                    p.text = text
                    p.font.size = Pt(14)

                if 'image' in slide_data and slide_data['image'] is not None:
                    image_path = slide_data['image']
                    image_bytes = BytesIO(image_path.read())
                    slide.shapes.add_picture(image_bytes, Inches(1), Inches(3.5), width=Inches(4), height=Inches(3))

            pptx_file = BytesIO()
            prs.save(pptx_file)
            pptx_file.seek(0)
            return pptx_file

        # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª–∞–π–¥–æ–≤
        st.subheader("–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é")
        presentation_title = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏", "–ú–æ—è –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è")
        presentation_subtitle = st.text_input("–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫", "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏")
        slides_data = []
        slide_count = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤", min_value=1, max_value=10, step=1)

        for slide_num in range(slide_count):
            st.subheader(f"–°–ª–∞–π–¥ #{slide_num + 1}")
            slide_title = st.text_input(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Å–ª–∞–π–¥–∞ #{slide_num + 1}", key=f"slide_title_{slide_num}")
            slide_subtitle = st.text_input(f"–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Å–ª–∞–π–¥–∞ #{slide_num + 1}", key=f"slide_subtitle_{slide_num}")
            slide_text = []
            num_texts = st.number_input(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤ –¥–ª—è —Å–ª–∞–π–¥–∞ #{slide_num + 1}",
                                        min_value=0, max_value=5, step=1)
            for i in range(num_texts):
                text_block = st.text_input(f"–¢–µ–∫—Å—Ç {i + 1} –¥–ª—è —Å–ª–∞–π–¥–∞ #{slide_num + 1}",
                                           key=f"slide_text_{slide_num}_{i}")
                if text_block:
                    slide_text.append(text_block)

            slide_image = st.file_uploader(f"–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–ª–∞–π–¥–∞ #{slide_num + 1}",
                                           type=["jpg", "png"], key=f"slide_image_{slide_num}")

            slides_data.append({
                'title': slide_title,
                'subtitle': slide_subtitle,
                'text': slide_text,
                'image': slide_image if slide_image else None
            })

        if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é"):
            if not slides_data:
                st.warning("–ù–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å–ª–∞–π–¥—ã –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏.")
            else:
                pptx_file = create_presentation(slides_data)
                st.download_button(
                    label="–°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é",
                    data=pptx_file,
                    file_name=f"{presentation_title}.pptx",
                    mime="application/vnd.openxmlformats-officedocument.presentationml.presentation"
                )








st.markdown("<div style='height:200px;'></div>", unsafe_allow_html=True)
st.markdown("---")
st.image(logo, width=100)
st.caption("¬© 2025 –ü–í–ö-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä")






